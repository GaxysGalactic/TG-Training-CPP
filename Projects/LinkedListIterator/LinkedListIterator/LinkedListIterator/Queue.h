#pragma once
#include "SLList.h"

template <typename T>
class TQueue
{
private:

	TSLList<T> List;

public:

	//-------------------------------------------------------------------------------------------
	T& Front()
	{
		return List.GetHead();
	}

	//-------------------------------------------------------------------------------------------
	const T& Front() const
	{
		return List.GetHead();
	}

	//-------------------------------------------------------------------------------------------
	bool IsEmpty() const
	{
		return List.IsEmpty();
	}

	//-------------------------------------------------------------------------------------------
	int GetSize() const
	{
		return List.GetSize();
	}

	//-------------------------------------------------------------------------------------------
	void Dequeue()
	{
		List.RemoveHead();
	}

	//-------------------------------------------------------------------------------------------
	void Enqueue(const T& Data)
	{
		List.AddTail(Data);
	}
};